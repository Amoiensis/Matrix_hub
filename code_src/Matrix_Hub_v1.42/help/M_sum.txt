---------------------
	$ M_sum $
---------------------
[Type]
<function>
	Matrix* M_sum(Matrix* _mat);
	/*Matrix_Inverse	矩阵求逆*/
	|--Matrix* _mat-> 待求和矩阵；
	----
	|--Matrix* result-> 结果矩阵；
[Usage]
	Matrix* _mat_inv = M_Inverse(mat_21);
	将各列矩阵求和，组成行矩阵输出；
	[注]矩阵按列求和/向量元素和；	
[e.g.]
<code>
	//	Mat_21
	MATRIX_TYPE _mat_21[3][3] = { 0,2,3,2,1,2,4,1,3};
	row = sizeof(_mat_21) / sizeof(_mat_21[0]);
	column = sizeof(_mat_21[0]) / sizeof(_mat_21[0][0]);
	Matrix*  mat_21 = Matrix_gen(row,column,_mat_21);
	M_print(mat_21);
	//	Sum
	M_print(M_sum(mat_21));
<output>
	>>Matrix_1f1680:
	0.00    2.00    3.00
	2.00    1.00    2.00
	4.00    1.00    3.00
	>>Matrix_1f1830:
	6.00    4.00    8.00
(END)
---------------------