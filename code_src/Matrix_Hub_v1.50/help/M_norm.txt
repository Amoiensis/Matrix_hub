---------------------
	$ M_norm $
---------------------
[Type]
<function>
	MATRIX_TYPE M_norm(Matrix* _mat, int Setting);
	/*Caculate Matrix norm-num	向量/矩阵范数
	(向量 Vector)
	Setting=1 - 1范数，Setting=2 - 2范数，Setting=INF - 无穷范数，Setting=p - p范数；
	(矩阵 Matrix)
	Setting=1 - 1范数，Setting=2 - 2范数，Setting=INF - 无穷范数，Setting=FRO - F范数；*/
	|--Matrix* _mat-> 待计算矩阵；
	|-- int Setting->设置范数类型；Setting=1/2/p/INF/FRO；
	----
	|--MATRIX_TYPE  result-> 矩阵的范数；
[Usage]
	M_norm(mat_b,1);
	M_norm(mat_b,2);
	对给方阵求范数，返回对应范数的值；
[e.g.1]
<code>
	//	Mat_b
	MATRIX_TYPE _mat_b[5][1] = { 1,2,7,2,4};
	row = sizeof(_mat_b) / sizeof(_mat_b[0]);
	column = sizeof(_mat_b[0]) / sizeof(_mat_b[0][0]);
	Matrix*  mat_b = Matrix_gen(row,column,_mat_b);
	M_print(mat_b);
	//	Norm
	printf("NORM1 = %lf\n",M_norm(mat_b,1));
	printf("NORM2 = %lf\n",M_norm(mat_b,2));
<output>
	>>Matrix_171760:
	1.00
	2.00
	7.00
	2.00
	4.00
	NORM1 = 16.000000
	NORM2 = 74.000000
[e.g.2]
<code>
	//	Mat_21
	MATRIX_TYPE _mat_21[3][3] = { 1,2,3,2,1,3,3,3,5};
	int row = sizeof(_mat_21) / sizeof(_mat_21[0]);
	int column = sizeof(_mat_21[0]) / sizeof(_mat_21[0][0]);
	Matrix*  mat_21 = Matrix_gen(row,column,_mat_21);
	M_print(mat_21);
	//	Norm
	printf(">>2-Norm = %lf\n",M_norm(mat_21,2));
	printf(">>1-Norm = %lf\n",M_norm(mat_21,2));
	printf(">>F-Norm = %lf\n",M_norm(mat_21,2));
<output>
	>>Matrix_151460:
	1.00    2.00    3.00
	2.00    1.00    3.00
	3.00    3.00    5.00
	>>2-Norm = 69.871247
	>>1-Norm = 11.000000
	>>F-Norm = 8.426150
	
(END)
---------------------