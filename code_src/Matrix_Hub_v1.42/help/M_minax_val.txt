---------------------
	$ M_minax_val $
---------------------
[Type]
<function>
	Matrix* M_minax_val(Matrix* _mat, Matrix* _mat_position);
	/*use _mat_position(vector) 
	to get the value of the specified row position of each column of the matrix (_mat)
	矩阵各列指定行位置的值*/
	|--Matrix* _mat-> 原矩阵；
	|--Matrix* _mat_position-> 各列中行位置；
	----
	|--Matrix* result-> 结果矩阵（返回值）；
[Usage]
	M_minax_val(mat_21,M_max(mat_21));
	找到mat_21矩阵按各列中，最大元素的值；
	[注] 通常将，M_max() 和 M_minax_val() 配合使用；	
[e.g.]
<code>
	//	Mat_21
	MATRIX_TYPE _mat_21[3][3] = { 0,2,3,2,1,2,4,1,3};
	row = sizeof(_mat_21) / sizeof(_mat_21[0]);
	column = sizeof(_mat_21[0]) / sizeof(_mat_21[0][0]);
	Matrix*  mat_21 = Matrix_gen(row,column,_mat_21);
	M_print(mat_21);
	//	Max
	M_print(mat_21);
	M_print(M_max(mat_21));
	M_print(M_minax_val(mat_21,M_max(mat_21)));
<output>
	>>Matrix_b01680:
	0.00    2.00    3.00
	2.00    1.00    2.00
	4.00    1.00    3.00
	>>Matrix_b01830 has been freed.
	>>Matrix_b01850:
	2.00    0.00    0.00
	>>Matrix_b01830 has been freed.
	>>Matrix_b06bc0:
	4.00    2.00    3.00
<explain>
	对 mat_21 而言，
	第1列最大值，为第2行，值为4.00；
	第2列最大值，为第0行，值为2.00；
	第3列最大值，为第0行，值为3.00；
	从而结果为，[4.00,2.00,3.00];
(END)
---------------------