---------------------
	$ M_full $
---------------------
[Type]
<function>
	Matrix* M_full(Matrix* _mat,int row_up,int row_down,int column_left,int column_right,MATRIX_TYPE full_data);
	/*Full	填充矩阵*/
	|--Matrix* _mat-> 待填充矩阵；
	|--int row_up-> 上边界添加行数；
	|--int row_downl-> 下边界添加行数；
	|--int column_left-> 左边界添加列数；
	|--int column_right->  右边界添加列数；
	|--MATRIX_TYPE full_data-> 用于填充的值；
	----
	|--Matrix* return-> 返回填充所得的结果矩阵；
[Usage]
	Matrix* mat_full = M_full(mat_2,1,1,1,1,0);
	对mat矩阵，上边界添加1行，下边界添加一行，左侧添加一列，右侧无添加，添加值均为0；
	
[e.g.]
<code>
	//	Mat_2	
	MATRIX_TYPE _mat_2[5][3] = { 1,2,3,4,5,6,7,8,7,10,11,12,11,14,15 };		
	row = sizeof(_mat_2) / sizeof(_mat_2[0]);
	column = sizeof(_mat_2[0]) / sizeof(_mat_2[0][0]);
	Matrix*  mat_2 = Matrix_gen(row,column,_mat_2);
	//	Full
	M_print(mat_2);
	Matrix* mat_full = M_full(mat_2,1,1,1,1,0);
	M_print(mat_2);
<output>
	>>Matrix_1b14d0:
	1.00    2.00    3.00
	4.00    5.00    6.00
	7.00    8.00    7.00
	10.00   11.00   12.00
	11.00   14.00   15.00
	>>Full<U1,D1,L1,R1>(Matrix_1b14d0)=
	        Matrix_1b1830
	>>Matrix_1b14d0:
	1.00    2.00    3.00
	4.00    5.00    6.00
	7.00    8.00    7.00
	10.00   11.00   12.00
	11.00   14.00   15.00
(END)
---------------------